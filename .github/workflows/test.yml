name: Test

on:
  - pull_request
  - push

env:
  BUNDLE_WITHOUT: release

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "2.5"
          - "2.6"
          - "2.7"
          - "3.0"
          - "3.1"
        puppet:
          - "~> 7.0"
          - "~> 6.0"
          - "https://github.com/puppetlabs/puppet.git#main"
        exclude:
          - ruby: "2.6"
            puppet: "~> 7.0"
          - ruby: "2.5"
            puppet: "~> 7.0"

          - ruby: "3.1"
            puppet: "~> 6.0"
          - ruby: "3.0"
            puppet: "~> 6.0"

          - ruby: "2.6"
            puppet: "https://github.com/puppetlabs/puppet.git#main"
          - ruby: "2.5"
            puppet: "https://github.com/puppetlabs/puppet.git#main"
    env:
      PUPPET_VERSION: ${{ matrix.puppet }}
      COVERAGE: ${{ matrix.coverage }}
    name: "Ruby ${{ matrix.ruby }} - Puppet ${{ matrix.puppet }}"
    steps:
      - name: Enable coverage reporting on Ruby 3.1
        if: matrix.puppet == '~> 7.0' && matrix.ruby == '3.1'
        run: echo 'COVERAGE=yes' >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Install Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Rubocop
        run: bundle exec rubocop
      - name: Verify Build
        run: gem build *.gemspec
      - name: Integration
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          GCP_LOCATION: ${{ secrets.GCP_LOCATION }}
          GCP_KEYRING: ${{ secrets.GCP_KEYRING }}
          GCP_CRYPTO_KEY: ${{ secrets.GCP_CRYPTO_KEY }}
        run: |
          echo "${GCP_CREDENTIALS}" > ./credentials.json
          echo "${GITHUB_SHA}" > ./input.txt
          bundle exec eyaml encrypt --gkms-project="${GCP_PROJECT}" \
                                    --gkms-location="${GCP_LOCATION}" \
                                    --gkms-keyring="${GCP_KEYRING}" \
                                    --gkms-crypto-key="${GCP_CRYPTO_KEY}" \
                                    --gkms-credentials=./credentials.json \
                                    -n gkms -o string -s "${GITHUB_SHA}" > ./cipher.txt
          bundle exec eyaml decrypt --gkms-project="${GCP_PROJECT}" \
                                    --gkms-location="${GCP_LOCATION}" \
                                    --gkms-keyring="${GCP_KEYRING}" \
                                    --gkms-crypto-key="${GCP_CRYPTO_KEY}" \
                                    --gkms-credentials=./credentials.json \
                                    -n gkms -f ./cipher.txt > ./plain.txt
          echo "Input: ${GITHUB_SHA}"
          echo "Ciphertext: $(cat ./cipher.txt)"
          echo "Plaintext: $(cat ./plain.txt)"
          diff ./input.txt ./plain.txt